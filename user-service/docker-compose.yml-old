version: '3.8'

services:
  app:
    build:
      context: .  # Path to Dockerfile
    env_file:
      - .env
    environment:
      - MONGO_URL=${MONGO_CONNECTION}
      - REDIS_HOST=redis
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    command: npm run start:dev
    ports:
      - "${PORT}:9000"    # Map host PORT to container 9000 (adjust if needed)
      - "5000:5000"       # gRPC port
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - mongo
      - redis
      - rabbitmq
      - sonarqube

  mongo:
    image: mongo:6
    ports:
      - "${MONGO_CONNECTION}:27017"
    networks:
      - app_network

  redis:
    image: redis:7
    ports:
      - "6371:6379"
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5673:5672"    # RabbitMQ AMQP protocol
      - "15673:15672"  # RabbitMQ management UI
    networks:
      - app_network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9001:9000"    # SonarQube UI accessible on localhost:9001
    environment:
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
    depends_on:
      - db
    networks:
      - app_network

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  sonarqube_db_data:
