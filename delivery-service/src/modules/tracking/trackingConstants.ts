export const TRACKING_CONSTANTS = {
  MESSAGES: {
    SUCCESS: {
      SERVER_INIT: 'WebSocket server started on port',
      CLIENT_CONNECTED: 'Client connected',
      DELIVERY_PARTNER_CONNECTED: 'Delivery Partner connected and added to map',
      USER_CONNECTED: 'User connected and added to map',
      CLIENT_DISCONNECTED: 'Client disconnected',
      DELIVERY_PARTNER_DISCONNECTED: 'Delivery Partner disconnected and removed from map',
      USER_DISCONNECTED: 'User disconnected and removed from map',
      TRACKING_REMOVED: 'Removed tracking for partner as client disconnected',
      LOCATION_UPDATE_ATTEMPT: 'Received availableLocationUpdate from partner',
      LOCATION_UPDATED: 'Updated available driver location',
      ASSIGNED_UPDATE_ATTEMPT: 'Received occupiedLocationUpdate from partner',
      TRACKING_UPDATE_SENT: 'Tracking update sent to user',
      NEW_DELIVERY_SENT: 'New Delivery Send Successfully',
      BROADCAST_ATTEMPT: 'Broadcasting new delivery request for order',
      BROADCAST_COMPLETED: 'Finished broadcasting delivery request for order',
      DELIVERY_RESPONSE_ATTEMPT: 'Received deliveryResponseAccept from partner for order',
      DELIVERY_RESPONSE_SET: 'Set deliveryResponse in Redis to prevent conflicts',
      DELIVERY_ACCEPTED: 'Acknowledged acceptance to partner for order',
      PARTNER_STATUS_UPDATED: 'Updated partner status to OCCUPIED',
      PARTNER_ASSIGNED: 'Assigned partner to order',
      TRACKING_MAP_UPDATED: 'Added partner to trackingMap with customer socket',
      DRIVER_ASSIGNED: 'Notified customer of driver assignment',
    },
    ERROR: {
      INVALID_ROLE: 'Client connected without a role in payload',
      INVALID_PARTNER_ID: 'Delivery partner client connected without partnerId',
      INVALID_USER_ID: 'User client connected with unknown role',
      CONNECTION_FAILED: 'Error handling connection for client',
      UNAUTHORIZED_PARTNER: 'Unauthorized Partner',
      DISCONNECTION_FAILED: 'Error handling disconnection for client',
      INVALID_LOCATION_DATA: 'Invalid location data provided',
      LOCATION_UPDATE_FAILED: 'Failed to update location',
      ASSIGNED_UPDATE_FAILED: 'Failed to forward tracking update',
      INVALID_RESPONSE_DATA: 'Invalid order or user ID provided',
      ORDER_ALREADY_ASSIGNED: 'Order already assigned to another partner',
    },
    WARN: {
      UNKNOWN_ROLE: 'Client connected with unknown role',
      NO_PARTNER_ID: 'availableLocationUpdate received from unauthenticated or invalid partner',
      NO_CUSTOMER_TRACKING: 'No customer found tracking partner',
      NO_DELIVERY_PARTNERS: 'No delivery partners in the list to broadcast request for order',
      PARTNER_SOCKET_NOT_FOUND: 'Partner is in the list but their socket is not found in deliveryPartnersMap',
      STATUS_MISMATCH: 'Partner status is not ONLINE',
      NO_CUSTOMER_SOCKET: 'Customer not found in customersMap. Tracking might not be active',
      ORDER_NOT_ASSIGNED: 'Order is not yet assigned',
    },
  },
  EVENTS: {
    AVAILABLE_LOCATION_UPDATE: 'availableLocationUpdate',
    OCCUPIED_LOCATION_UPDATE: 'occupiedLocationUpdate',
    NEW_DELIVERY: 'newDelivery',
    DELIVERY_RESPONSE_ACCEPT: 'deliveryResponseAccept',
    ERROR: 'error',
    STATUS_MISMATCH: 'statusMismatch',
    ACKNOWLEDGEMENT: 'acknowledgement',
    TRACKING_UPDATE: 'trackingUpdate',
    DRIVER_ASSIGNED: 'driverAssigned',
  },
  REDIS: {
    DELIVERY_RESPONSE_PREFIX: 'deliveryResponse:',
    TTL_MS: 5 * 60 * 1000
  },
  CONFIG: {
    WEBSOCKET_PORT: 4003,
    CORS_ORIGIN: '*',
  }
};